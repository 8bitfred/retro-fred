name: "Build"
on:
  push:
    branches:
      main
      miguel/releasetest
    tags:
      'release/*'
  pull_request:
    branches:
      main
      miguel/releasetest
    types:
      - opened
      - edited
      - synchronize

jobs:
  build_linux:
    name: 'Linux build'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source'
        uses: actions/checkout@v4
      - name: 'Install SDL2'
        uses: './.github/actions/setup-sdl'
        with:
          sdl_version: '2.30.3'
      - name: 'Install SDL2_image'
        uses: './.github/actions/setup-sdl_image'
        with:
          sdl_image_version: '2.8.2'
      - name: 'Configure and build'
        run: |
          cmake -G Ninja -S . -B build
          cmake --build build --verbose

  build_windows:
    name: 'Windows build'
    runs-on: windows-latest
    steps:
      - name: 'Checkout source'
        uses: actions/checkout@v4

      - name: Download SDL2
        run: |
          Invoke-WebRequest "https://www.libsdl.org/release/SDL2-devel-2.30.3-VC.zip" -OutFile "SDL2.zip"
          Expand-Archive -Path SDL2.zip -DestinationPath "C:\SDL2"

      - name: Download SDL2_image
        run: |
          Invoke-WebRequest "https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.2/SDL2_image-devel-2.8.2-VC.zip" -OutFile "SDL2_image.zip"
          Expand-Archive -Path SDL2_image.zip -DestinationPath "C:\SDL2_image"

      - name: 'Configure and build - 64 bit binary'
        run: |
          mkdir build
          mkdir build\win64
          cmake -G "Visual Studio 17 2022" -A x64 "-DCMAKE_PREFIX_PATH=C:\SDL2;C:\SDL2_image" -S . -B build\win64
          cmake --build build\win64 --config Release --verbose
          cd build\win64
          cpack -G ZIP --config CPackConfig.cmake

      - name: 'Archive 64 bit binary'
        uses: actions/upload-artifact@v4
        with:
          name: retro-fred-win64
          if-no-files-found: error
          path: |
            build/win64/retro-fred-*-win64.zip
            build/win64/version

  build_android:
    name: 'Android build'
    runs-on: ubuntu-latest
    env:
      sdl_version: '2.29.3'
      sdl_image_version: '2.8.2'
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: 'Checkout source'
        uses: actions/checkout@v4
        with:
          path: src

      - name: 'Download SDL2'
        id: download_sdl2
        run: |
          wget https://www.libsdl.org/release/SDL2-${{ env.sdl_version }}.tar.gz
          tar xzf SDL2-${{ env.sdl_version }}.tar.gz
          cd SDL2-${{ env.sdl_version }}
          patch -p1 < "$GITHUB_WORKSPACE/src/android/patch-SDL2-2.29.3-aaudio-buffer-size.patch"
          echo "sdl2_path="$(pwd) >> "$GITHUB_OUTPUT"
      
      - name: 'Download SDL2_image'
        id: download_sdl2_image
        run: |
          wget https://github.com/libsdl-org/SDL_image/releases/download/release-${{ env.sdl_image_version }}/SDL2_image-${{ env.sdl_image_version }}.tar.gz
          tar xzf SDL2_image-${{ env.sdl_image_version }}.tar.gz
          echo "sdl2_image_path="$(pwd)/SDL2_image-${{ env.sdl_image_version }} >> "$GITHUB_OUTPUT"
      
      - name: 'Configure and build'
        run: |
          cd src
          ./android/configure --sdl="$GITHUB_WORKSPACE/SDL2-${{ env.sdl_version }}" --sdl-image=$GITHUB_WORKSPACE/SDL2_image-${{ env.sdl_image_version }}
          ./android/gradlew build --info

      - name: 'Find version file'
        run: find . -name "version"

      - name: 'Archive APK'
        uses: actions/upload-artifact@v4
        with:
          name: retro-fred-android
          if-no-files-found: error
          path: |
            src/android/app/build/outputs/apk/debug/app-debug.apk
            src/android/app/.cxx/Debug/*/x86/version

  unique-version:
    runs-on: ubuntu-latest
    needs: [build_windows]
    if: ${{ ! startsWith(github.ref, 'refs/tags/release/') }}
    steps:
      - name: 'Download archived builds'
        uses: actions/download-artifact@v4
        with:
          name: retro-fred-win64

      - name: 'Check for unique version'
        run: |
          version=$(cat retro-fred-win64/version)
          if [ git rev-parse "release/$version" ]; then
              echo "Tag for version $version already exists"
              false
          fi

  release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows] # , build_android]
    if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    steps:
      - name: 'Download archived builds'
        uses: actions/download-artifact@v4

      - name: 'See structure'
        run: find .

      - name: 'Check that tag name matches version'
        run:
          version=$(cat retro-fred-win64/version)
          [ "${{ github.ref }}" = "refs/tags/release/$version" ]
